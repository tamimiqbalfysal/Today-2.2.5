
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if isAuthenticated() && isOwner(userId);
      // Only the owner can read or update their own user document
      allow read, update: if isAuthenticated() && isOwner(userId);
       // Allow deleting own user document
      allow delete: if isAuthenticated() && isOwner(userId);

      // Rules for the 'notifications' subcollection
      match /notifications/{notificationId} {
        // Allow creating notifications (e.g., for likes)
        allow create, delete: if isAuthenticated();
        // Only the owner can read or update their own notifications
        allow read, update: if isAuthenticated() && isOwner(userId);
      }
    }

    // Rules for the 'usernames' collection (for ensuring unique usernames)
    match /usernames/{username} {
      // Any authenticated user can create a username document (on signup)
      allow create: if isAuthenticated();
      // Allow deleting username when account is deleted
      allow delete: if isAuthenticated();
      // No one should read or update directly
      allow read, update: if false;
    }

    // Rules for the 'posts' collection
    match /posts/{postId} {
      // Any authenticated user can read all posts
      allow read: if isAuthenticated();
      // Any authenticated user can create a post
      allow create: if isAuthenticated();
      // Any authenticated user can update a post (for likes, comments)
      // For deletion, only the author of the post can delete it.
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
    }

    // Rules for the 'giftCodes' collection
    match /giftCodes/{codeId} {
        // Allow admin (or any auth user for now) to create codes.
        allow create: if isAuthenticated();
        // Allow authenticated users to read and update (to mark as used).
        allow read, update: if isAuthenticated();
    }
    
    // Rules for the 'thinkCodes' collection
    match /thinkCodes/{codeId} {
       // Allow admin (or any auth user for now) to create codes.
       allow create: if isAuthenticated();
       // Allow authenticated users to read and update (to mark as used).
       allow read, update: if isAuthenticated();
    }
  }
}
