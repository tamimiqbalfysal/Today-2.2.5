rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default rule: Allow read and write access for all authenticated users.
    // This is useful for development but should be replaced with more
    // granular rules for production.
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // UTILITY FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // USERS
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);

      match /notifications/{notificationId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // USERNAMES
    match /usernames/{username} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow delete: if isOwner(resource.data.uid);
    }
    
    // POSTS
    match /posts/{postId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update: if isSignedIn();
      allow delete: if isSignedIn() && isOwner(resource.data.authorId);
    }
    
    // GIFT & THINK CODES
    match /giftCodes/{codeId} {
      allow read, write: if isSignedIn();
    }
    
    match /thinkCodes/{codeId} {
      allow read, write: if isSignedIn();
    }
  }
}
