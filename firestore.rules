rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow users to read all user profiles (for seeing followers/following, etc.)
      allow read: if request.auth != null;
      // Allow users to create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow users to update their own document, and other users to update their `following` list.
      allow update: if request.auth != null && request.auth.uid == userId;
      // Allow users to delete their own document.
      allow delete: if request.auth != null && request.auth.uid == userId;

      // Notifications are a subcollection of users
      match /notifications/{notificationId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /usernames/{username} {
      // Allow anyone to check if a username exists
      allow read: if request.auth != null;
      // Allow a user to create a username document for themselves
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      // Allow a user to delete their own username document
      allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }

    match /posts/{postId} {
      // Allow any authenticated user to read any post
      allow read: if request.auth != null;
      // Allow authenticated users to create posts
      allow create: if request.auth != null;
      // Allow users to update posts (e.g., likes, comments), or the author to edit/delete
      allow update, delete: if request.auth != null;
    }
    
    match /giftCodes/{codeId} {
      allow read, write: if request.auth != null;
    }

    match /thinkCodes/{codeId} {
      allow read, write: if request.auth != null;
    }
  }
}
